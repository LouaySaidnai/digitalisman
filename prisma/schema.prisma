generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produit {
  id                   Int          @id @default(autoincrement())
  nom                  String
  sousTitre            String?
  slug                 String       @unique
  prix                 Json
  prixOriginal         String?
  niveauPriorite       Int?
  cible                String?
  conceptFondateur     Json?
  contenu              String?
  processus            String?
  duree                String?
  livrablesDetailles   String?
  supportsInclus       String?
  temoignages          String?
  argumentsCommerciaux String?
  imageHero            String?
  videoUrl             String?
  gifSolution          String?
  entonnoirNaturel     String?
  urgence              String?
  scriptType           String?
  format               String?
  QuestionReponse      Json?
  conditionsPaiement   String?
  garantie             String?
  statut               String       @default("actif")
  dateCreation         DateTime     @default(now())
  dateModification     DateTime     @updatedAt
  meeting              Json?
  disponibilite        String?
  testResults          TestResult[]
}

model TestResult {
  id          Int      @id @default(autoincrement())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  email       String?   // email du client ayant fait le test (optionnel)
  answers     Json
  personality String
  createdAt   DateTime @default(now())
  produitId   Int?
  produit     Produit? @relation(fields: [produitId], references: [id])
}

model User {
  id               String    @id @default(cuid())
  email            String    @unique
  password         String
  nom              String?
  prenom           String?
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  provider         String?
  providerId       String?
  testResults      TestResult[]
}