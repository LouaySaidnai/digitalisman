// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Produit {
  id                    Int      @id @default(autoincrement())
  
  // Informations de base
  nom                   String
  sousTitre             String?
  slug                  String   @unique
  
  // Tarification (JSON structuré)
  prix                  Json     // Format: "495€" ou { "Atelier": "495€", "Programme": "1990€" } ou { "original": "495€", "promo": "295€", "condition": "sur rendez-vous" }
  prixOriginal          String?  // Prix barré pour les promos
  
  // Ciblage et positionnement
  niveauPriorite        Int?     // 1 (urgent), 2 (moyen), 3 (complémentaire)
  cible                 String?
  conceptFondateur      Json?    // Format: { "probleme": "...", "solution": "..." } 
  
  // Contenu et processus
  contenu               String?  @db.Text
  processus             String?  @db.Text  // Description du processus en texte libre, sans limite de taille
  duree                 String?  // "3 semaines", "60 minutes", etc.
  
  // Livrables et supports
  livrablesDetailles    String?  @db.Text
  supportsInclus        String?
  
  // Preuves sociales
  temoignages           String?
  argumentsCommerciaux  String?
  
  // Médias
  imageHero             String?
  videoUrl              String?
  gifSolution           String?
  
  // Écosystème et entonnoir
  entonnoirNaturel      String?  // Nom du produit précédent dans l'entonnoir
  
  // Urgence et conditions
  urgence               String?  // Message d'urgence (ex: concurrence sur un produit)
  
  // Nouveaux champs
  scriptType            String?  // La "question magique" qui fait que ce coaching fonctionne
  format                String?  // Type de service: "Coaching live", "Formation", "Webinaire", etc.
  QuestionReponse       Json?    // FAQ structurée en JSON
  conditionsPaiement    String?  // "3x sans frais"
  garantie              String?  // "Satisfait ou remboursé 30 jours"
  
  // Métadonnées
  statut           String   @default("actif")
  dateCreation     DateTime @default(now())
  dateModification DateTime @updatedAt

  // Relationship with TestResult
  testResults TestResult[]
}

model TestResult {
  id          Int      @id @default(autoincrement())
  userId      Int
  answers     Json
  personality String
  createdAt   DateTime @default(now())

  // Relationship with Produit
  produitId Int?
  produit   Produit? @relation(fields: [produitId], references: [id])
}
